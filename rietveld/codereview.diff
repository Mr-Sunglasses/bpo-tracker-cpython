Index: codereview/views.py
===================================================================
--- codereview/views.py	(revision 510)
+++ codereview/views.py	(working copy)
@@ -1382,6 +1382,8 @@
   issue = request.issue
   patchsets = list(issue.patchset_set.order('created'))
   response = None
+  if not patchsets:
+    return issue, patchsets, response
   if not patchset_id:
     patchset_id = patchsets[-1].key().id()
 
Index: codereview/models.py
===================================================================
--- codereview/models.py	(revision 510)
+++ codereview/models.py	(working copy)
@@ -520,14 +520,14 @@
   @classmethod
   def get_account_for_user(cls, user):
     """Get the Account for a user, creating a default one if needed."""
-    email = user.email()
-    assert email
-    key = '<%s>' % email
     # Since usually the account already exists, first try getting it
     # without the transaction implied by get_or_insert().
-    account = cls.get_by_key_name(key)
+    # Roundup adjustment: accounts will have the same IDs as users
+    account = cls.get_by_id(user.id)
     if account is not None:
       return account
+    # Not found, don't auto-create in any case
+    raise engine.FetchError('account not found')
     nickname = cls.create_nickname_for_user(user)
     return cls.get_or_insert(key, user=user, email=email, nickname=nickname,
                              fresh=True)
@@ -556,8 +556,10 @@
   def get_account_for_email(cls, email):
     """Get the Account for an email address, or return None."""
     assert email
-    key = '<%s>' % email
-    return cls.get_by_key_name(key)
+    account = cls.objects.filter(email=email)
+    if not account:
+      return None
+    return account[0]
 
   @classmethod
   def get_by_key_name(cls, key, **kwds):
